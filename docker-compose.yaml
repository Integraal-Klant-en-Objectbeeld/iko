services:
    postgres:
        image: 'postgres:latest'
        environment:
            - POSTGRES_DB=iko-db
            - POSTGRES_PASSWORD=secret
            - POSTGRES_USER=iko-admin
        ports:
            - "5432:5432"
    haalcentraal-personen:
        container_name: iko-haalcentraal-personen
        image: ghcr.io/brp-api/personen-mock:2.2.1
        environment:
            - ASPNETCORE_ENVIRONMENT=Release
            - ASPNETCORE_URLS=http://+:5010
        ports:
            - "5010:5010"
    openzaak:
        image: openzaak/open-zaak:1.20.0
        container_name: iko-openzaak
        platform: linux/amd64
        environment:
            - DB_HOST=openzaak-database
            - DB_PORT=5432
            - SECRET_KEY=veryRestrictedSecretKey
            - DB_USER=openzaak
            - DB_PASSWORD=openzaak
            - DB_NAME=openzaak
            - CACHE_DEFAULT=openzaak-redis:6379/0
            - CACHE_AXES=openzaak-redis:6379/0
            - DEBUG=true
            - ALLOWED_HOSTS=localhost,host.docker.internal,172.17.0.1,openzaak
            - OPENZAAK_SUPERUSER_USERNAME=admin
            - OPENZAAK_SUPERUSER_EMAIL=admin@admin.org
            - DJANGO_SUPERUSER_PASSWORD=admin
            - SENDFILE_BACKEND=django_sendfile.backends.simple
            - NOTIFICATIONS_DISABLED=true
            - DISABLE_2FA=True
        ports:
            - "8001:8000"
        depends_on:
            - openzaak-database
            - openzaak-redis

    openzaak-database:
        image: postgis/postgis:17-3.4
        container_name: iko-openzaak-database
        platform: linux/amd64
        environment:
            - POSTGRES_USER=openzaak
            - POSTGRES_PASSWORD=openzaak
            - POSTGRES_DB=openzaak
        ports:
            - "5433:5432"
        volumes:
            - ./imports/open-zaak:/docker-entrypoint-initdb.d

    openzaak-redis:
        image: redis:7.4.3
        container_name: iko-openzaak-redis
        healthcheck:
            test: [ "CMD", "redis-cli", "ping" ]
            interval: 10s
            timeout: 5s
            retries: 3
            start_period: 5s

    objecten-api:
        image: maykinmedia/objects-api:2.1.1
        container_name: iko-objecten-api
        platform: linux/amd64
        ports:
            - "8010:8000"
        environment: &objects-env
            - CORS_ALLOW_ALL_ORIGINS=true
            - SECRET_KEY=${SECRET_KEY:-1(@f(-6s_u(5fd&1sg^uvu2s(c-9sapw)1era8q&)g)h@cwxxg}
            - DJANGO_SETTINGS_MODULE=objects.conf.docker
            - DB_HOST=objecten-api-database
            - DEBUG=true
            - TWO_FACTOR_FORCE_OTP_ADMIN=False # this is not available yet in this version
            - TWO_FACTOR_PATCH_ADMIN=False
        depends_on:
            - objecten-api-database

    objecten-api-database:
        image: postgis/postgis:13-3.1
        container_name: iko-objecten-api-database
        platform: linux/amd64
        ports:
            - "54321:5432"
        environment:
            - POSTGRES_USER=objects
            - POSTGRES_PASSWORD=objects
            - POSTGRES_DB=objects
        labels:
            org.springframework.boot.ignore: true

    objecten-api-import:
        image: maykinmedia/objects-api:2.1.1
        container_name: iko-objects-api-import
        platform: linux/amd64
        environment: *objects-env
        # in the current version of django it is not possible to create a new user with password without user interaction by using the createsuperuser command
        command: sh init/init.sh
        volumes:
            - ./imports/objects-api/fixtures:/app/src/objects/fixtures
            - ./imports/objects-api/init:/app/init
        depends_on:
            - objecten-api

    objecttypen-api:
        image: maykinmedia/objecttypes-api:2.1.0
        container_name: iko-objecttypen-api
        platform: linux/amd64
        ports:
            - "8011:8000"
        environment: &objecttypes-env
            - CORS_ALLOW_ALL_ORIGINS=true
            - SECRET_KEY=${SECRET_KEY:-fgv=c0hz&tl*8*3m3893@m+1pstrvidc9e^5@fpspmg%cy$$15d}
            - DJANGO_SETTINGS_MODULE=objecttypes.conf.docker
            - DB_HOST=objecttypen-api-database
            - DEBUG=true
            - TWO_FACTOR_FORCE_OTP_ADMIN=False # this is not available yet in this version
            - TWO_FACTOR_PATCH_ADMIN=False
        depends_on:
            - objecttypen-api-database

    objecttypen-api-database:
        image: postgres:14.1
        container_name: iko-objecttypen-api-database
        ports:
            - "54324:5432"
        environment:
            - POSTGRES_USER=objecttypes
            - POSTGRES_PASSWORD=objecttypes
            - POSTGRES_DB=objecttypes
        labels:
            org.springframework.boot.ignore: true

    objecttypen-api-import:
        image: maykinmedia/objecttypes-api:2.1.0
        container_name: iko-objecttypen-api-import
        platform: linux/amd64
        environment: *objecttypes-env
        command: sh init/init.sh
        volumes:
            - ./imports/objecttypes-api/fixtures:/app/src/objecttypes/fixtures
            - ./imports/objecttypes-api/init:/app/init
        depends_on:
            - objecttypen-api

    open-klant:
        image: maykinmedia/open-klant:2.10.0
        container_name: iko-open-klant
        platform: linux/amd64
        environment:
            - DJANGO_SETTINGS_MODULE=openklant.conf.docker
            - SECRET_KEY=${SECRET_KEY:-django-insecure-$$8s@b*ds4t84-q_2#c0j0506@!l2q6r5_pq5e!vm^_9c*#^66b}
            - DB_NAME=openklant
            - DB_USER=openklant
            - DB_PASSWORD=openklant
            - DB_HOST=open-klant-database
            - CACHE_DEFAULT=open-klant-redis:6379/0
            - CACHE_AXES=open-klant-redis:6379/0
            - ALLOWED_HOSTS=*
            - DISABLE_2FA=True
        ports:
            - "8006:8000"
        depends_on:
            - open-klant-database

    open-klant-database:
        image: postgres:17.4
        container_name: iko-open-klant-database
        ports:
            - "54323:5432"
        environment:
            - POSTGRES_USER=${DB_USER:-openklant}
            - POSTGRES_PASSWORD=${DB_PASSWORD:-openklant}
        volumes:
            - ./imports/open-klanten:/docker-entrypoint-initdb.d

    open-klant-redis:
        image: redis:7.4.3
        container_name: iko-open-klant-redis
        healthcheck:
            test: [ "CMD", "redis-cli", "ping" ]
            interval: 10s
            timeout: 5s
            retries: 3
            start_period: 5s

    keycloak:
        container_name: iko-keycloak
        depends_on:
            - keycloak-database
        image: quay.io/keycloak/keycloak:24.0.1
        ports:
            - "8082:8082"
        environment:
            KEYCLOAK_ADMIN: admin
            KEYCLOAK_ADMIN_PASSWORD: admin
            KC_DB: postgres
            KC_DB_URL: jdbc:postgresql://keycloak-database/keycloak
            KC_DB_USERNAME: keycloak
            KC_DB_PASSWORD: keycloak
            KC_FEATURES: token-exchange,admin-fine-grained-authz
            KC_HTTP_RELATIVE_PATH: /auth
            PROXY_ADDRESS_FORWARDING: true
            KC_HTTP_ENABLED: true
            KC_HTTPS_ENABLED: false
        volumes:
            - ./imports/keycloak:/opt/keycloak/data/import
        command: "start-dev --import-realm --http-port=8082 --hostname keycloak --http-enabled=false"

    keycloak-database:
        image: postgres:15
        container_name: iko-keycloak-database
        ports:
            - "5439:5432"
        environment:
            POSTGRES_USER: keycloak
            POSTGRES_PASSWORD: keycloak
        labels:
            org.springframework.boot.ignore: true

    iko:
        build: .
        container_name: iko
        ports:
            - "8080:8080"
        environment:
            SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
            SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/iko-db
            SPRING_DATASOURCE_USERNAME: iko-admin
            SPRING_DATASOURCE_PASSWORD: secret
            IKO_CONNECTORS_BRP_HOST: http://haalcentraal-personen:5010
            IKO_CONNECTORS_OPENZAAK_HOST: http://openzaak:8001
            IKO_CONNECTORS_OPENZAAK_CLIENTID: valtimo_client
            IKO_CONNECTORS_OPENZAAK_SECRET: e09b8bc5-5831-4618-ab28-41411304309d
            IKO_CONNECTORS_BAG_HOST: https://api.bag.kadaster.nl
            IKO_CONNECTORS_BAG_APIKEY: asd
            IKO_CONNECTORS_OBJECTENAPI_HOST: http://objecten-api:8000
            IKO_CONNECTORS_OBJECTENAPI_SPECIFICATIONURI: http://objecten-api:8000/api/v2/schema/openapi.yaml
            IKO_CONNECTORS_OBJECTENAPI_TOKEN: 182c13e2209161852c53cef53a879f7a2f923430
            IKO_CONNECTORS_OPENKLANT_HOST: http://localhost:8006
            IKO_CONNECTORS_OPENKLANT_SPECIFICATIONURI: http://localhost:8006/api/v2/schema/openapi.yaml
            IKO_CONNECTORS_OPENKLANT_TOKEN: 5bf819967d9fdd00d326ce20774768b4182285e5
            SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_ISSUERURI: http://keycloak:8082/auth/realms/valtimo
            SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KEYCLOAK_CLIENTID: iko
            SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KEYCLOAK_CLIENTSECRET: ThisIsNotASecret
            SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUERURI: http://keycloak:8082/auth/realms/valtimo
