name: Start release

on:
    workflow_dispatch:
        inputs:
            version:
                description: 'Semver for the image (e.g., 1.2.3 or 1.2.3-beta.1)'
                default: 0.0.1
                required: true
                type: string

permissions:
    contents: write
    packages: write

jobs:
    build:
        runs-on: ubuntu-latest
        outputs:
            image-tag: ${{ steps.build-image.outputs.IMAGE_TAG }}
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Set up QEMU (for optional multi-arch)
              uses: docker/setup-qemu-action@v3

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Extract Docker metadata (labels)
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ghcr.io/${{ github.repository }}
                  labels: |
                      org.opencontainers.image.title=${{ github.event.repository.name }}
                      org.opencontainers.image.description=Integraal Klant & Objectbeeld (IKO) application container image
                      org.opencontainers.image.revision=${{ github.sha }}
                      org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
                      org.opencontainers.image.created={{date 'RFC3339'}}
                  annotations: |
                      org.opencontainers.image.description=Integraal Klant & Objectbeeld (IKO) application container image

            - id: build-image
              name: Prepare image tag
              run: |
                  TAG=iko-$(date +%s)
                  echo "IMAGE_TAG=$TAG" >> "$GITHUB_OUTPUT"

            - name: Build Docker image (Buildx) and export as TAR
              uses: docker/build-push-action@v6
              with:
                  context: .
                  file: ./Dockerfile
                  platforms: linux/amd64
                  push: false
                  tags: iko:${{ steps.build-image.outputs.IMAGE_TAG }}
                  labels: ${{ steps.meta.outputs.labels }}
                  annotations: ${{ steps.meta.outputs.annotations }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
                  outputs: type=docker,dest=iko-image.tar
                  provenance: false

            - name: Upload image artifact
              uses: actions/upload-artifact@v4
              with:
                  name: iko-image-artifact
                  retention-days: 1
                  path: iko-image.tar

    push:
        runs-on: ubuntu-latest
        needs: [build]
        env:
            IMAGE_TAG: ${{ needs.build.outputs.image-tag }}
            VERSION: ${{ github.event.inputs.version }}
        steps:
            - name: Validate version input is semver
              run: |
                  if [[ ! "$VERSION" =~ ^([0-9]+)\.([0-9]+)\.([0-9]+)(-[0-9A-Za-z.-]+)?(\+[0-9A-Za-z.-]+)?$ ]]; then
                    echo "Provided version '$VERSION' is not valid semver" >&2
                    exit 1
                  fi
            - name: Login to GitHub Container Registry
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}
            - uses: actions/download-artifact@v4
              with:
                  name: iko-image-artifact
                  path: .
            - name: Prepare repository name in lowercase
              run: echo "REPO_LC=${GITHUB_REPOSITORY,,}" >> "$GITHUB_ENV"
            - name: Load, tag and push images
              run: |
                docker load -i iko-image.tar
                # Tag the image for both versioned and latest tags
                docker tag iko:$IMAGE_TAG ghcr.io/${REPO_LC}:$VERSION
                docker tag iko:$IMAGE_TAG ghcr.io/${REPO_LC}:latest
                # Push all tags for this repository in a single call to reduce overhead
                docker push --all-tags ghcr.io/${REPO_LC}
            - name: Create GitHub Release (auto notes)
              uses: softprops/action-gh-release@v2
              with:
                  tag_name: v${{ env.VERSION }}
                  name: Iko v${{ env.VERSION }}
                  generate_release_notes: true
                  prerelease: ${{ contains(env.VERSION, '-') }}
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}