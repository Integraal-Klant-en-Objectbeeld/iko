name: Start release

on:
    workflow_dispatch:
        inputs:
            version:
                description: 'Semver for the image (e.g., 1.2.3 or 1.2.3-beta.1)'
                required: true
                type: string

changelog:
    categories:
        - title: Breaking Changes ðŸ› 
          labels:
              - Semver-Major
              - breaking-change
        - title: New Features ðŸŽ‰
          labels:
              - Semver-Minor
              - enhancement
        - title: Other Changes
          labels:
              - "*"

permissions:
    contents: write
    packages: write

jobs:
    build:
        runs-on: ubuntu-latest
        outputs:
            image-tag: ${{ steps.build-image.outputs.IMAGE_TAG }}
        steps:
            -   uses: actions/checkout@v4
            -   id: build-image
                name: Build the Docker image
                run: |
                    TAG=iko-$(date +%s)
                    docker build . --file Dockerfile --tag iko:$TAG
                    docker save iko:$TAG -o iko-image.tar
                    echo "IMAGE_TAG=$TAG" >> "$GITHUB_OUTPUT"
            -   name: Upload tag
                uses: actions/upload-artifact@v4
                with:
                    name: iko-image-artifact
                    retention-days: 1
                    path: 'iko-image.tar'
    push:
        runs-on: ubuntu-latest
        needs:
            - build
        env:
            IMAGE_TAG: ${{ needs.build.outputs.image-tag }}
            VERSION: ${{ github.event.inputs.version }}
        steps:
            -   name: Validate version input is semver
                run: |
                    if [[ ! "$VERSION" =~ ^([0-9]+)\.([0-9]+)\.([0-9]+)(-[0-9A-Za-z.-]+)?(\+[0-9A-Za-z.-]+)?$ ]]; then
                      echo "Provided version '$VERSION' is not valid semver" >&2
                      exit 1
                    fi
            -   name: 'Login to github packages'
                uses: docker/login-action@v2
                with:
                    registry: ghcr.io
                    username: ${{ github.actor }}
                    password: ${{ secrets.GITHUB_TOKEN }}
            -   uses: actions/download-artifact@v4
                with:
                    name: iko-image-artifact
                    path: .
            -   name: 'Prepare repository name in lowercase'
                run: echo "REPO_LC=${GITHUB_REPOSITORY,,}" >> $GITHUB_ENV
            -   name: Load, tag and push images
                run: |
                    docker load -i iko-image.tar
                    docker tag iko:$IMAGE_TAG ghcr.io/${REPO_LC}:$VERSION
                    docker push ghcr.io/${REPO_LC}:$VERSION
                    docker tag iko:$IMAGE_TAG ghcr.io/${REPO_LC}:latest
                    docker push ghcr.io/${REPO_LC}:latest
            -   name: Create GitHub Release
                uses: actions/create-release@v1
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                with:
                    tag_name: v${{ env.VERSION }}
                    release_name: Iko v${{ env.VERSION }}
                    draft: false
                    prerelease: ${{ contains(env.VERSION, '-') }}
